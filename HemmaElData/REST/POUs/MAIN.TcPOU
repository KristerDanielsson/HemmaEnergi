<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MAIN" Id="{aeb0ffbd-bfce-412b-af43-72f522b12325}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	// trigger command execution for Postman-Echo samples
		bGet10sek, bGet24h,bGetSMHI	: BOOL;

	fbHttpClientEonMaetare			: FB_IotHttpClient :=(sHostName:='192.168.68.61',   //connectix_smartmeter.local
								  	bKeepAlive:=TRUE, tConnectionTimeout:=T#20S);
									
	fbHttpClientHuset			: FB_IotHttpClient :=(sHostName:='192.168.68.58', //Husets El - Shelly
								  	bKeepAlive:=TRUE, tConnectionTimeout:=T#10S);
		
	fbHttpClientElpriset			: FB_IotHttpClient :=(sHostName:='elprisetjustnu.se',
									  	bKeepAlive:=TRUE, tConnectionTimeout:=T#4S);
									
	fbHttpClientSMHI			: FB_IotHttpClient :=(sHostName:='opendata-download-metfcst.smhi.se',
								  	bKeepAlive:=FALSE, tConnectionTimeout:=T#10S);

	fbHttpGetEonMaetare			: FB_HTTP_Get_SmartMeter;
	fbHttpGetHuset				: FB_HTTP_Get_Huset;
	fbHttpGetElpriset			: FB_HTTP_Get_Elpris;
	fbHttpGetSMHI				: FB_HTTP_Get_SMHI;
	

	timDataMomentan:ST_timData;

	samladataIntervall: TON;
		
	
	trigger: BOOL;
	loggadata: BOOL;
	raeknartid: TIME;

	nisse: INT;
	klar: BOOL;
	funkar: BOOL;
	upptagen: BOOL;
	
			systemtid: DT;
	fbGetsytstemtime: GETSYSTEMTIME;
	filetime: T_FILETIME;

	// Tider

	fbLocalTime     : FB_LocalSystemTime;
		systemtidDT: DATE_AND_TIME;
			datumTimmeString: STRING(255);
		datumTimmeDT: DATE_AND_TIME;

	timme: INT;
	TIMEvaerde: TIME;
	TODvaerde: TIME_OF_DAY;
	stringTid: STRING;
	stringTimme: STRING(255);
	timmeloggad: INT;
	timIndex: INT;    					 //remanent   //Från 0 till 87000 = 10 år
	stringDatum: STRING(255);
	stringDatumTid: STRING;
	

	bBusyHuset: BOOL;
	bBusyEon: BOOL;
	
	RisingEdge			: R_TRIG;
	solEffektWh: 			REAL;	//kW
	husEffektWh: 			REAL;	//kW
	nettoEffektWh:		REAL;	//kW
	
	sparadEffekt: REAL;



END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[

//SmartMeter, hämta data en gång per 10sekunder

// EON-mätare - init client parameters at startup
IF NOT fbHttpClientEonMaetare.bConfigured THEN 
	fbHttpClientEonMaetare.nHostPort:= 82;
END_IF

fbHttpClientEonMaetare.Execute();

// Husets-mätare - init client parameters at startup
IF NOT fbHttpClientHuset.bConfigured THEN 
	fbHttpClientHuset.nHostPort:= 80;
END_IF

fbHttpClientHuset.Execute();

// 10 sekunder - Cyklisk fråga med GET - EON-mätare och Hemma-mätare 

samladataIntervall(IN:=trigger, PT:=  T#5S, Q=>klar ,ET=> raeknartid);
IF samladataIntervall.Q THEN
	nisse:=nisse+1;			
	trigger:=FALSE;	
	bGet10sek:=NOT bGet10sek;
ELSE
		trigger:=TRUE;
END_IF

IF fbHttpClientEonMaetare.bConfigured THEN 
		fbHttpGetEonMaetare(timDataMomentan:=timDataMomentan,nettoEffektWh:=nettoEffektWh,bSend:= bGet10sek, fbClient:=fbHttpClientEonMaetare,bBusy=>bBusyEon);
END_IF

//Hemmamätare
IF fbHttpClientHuset.bConfigured THEN 
		fbHttpGetHuset(timDataMomentan:=timDataMomentan,bSend:=bGet10sek, fbClient:=fbHttpClientHuset,husEffektWh:= husEffektWh, bBusy=>bBusyHuset);
END_IF

RisingEdge(CLK:= NOT bGet10sek );
IF  RisingEdge.Q THEN
	solEffektWh:= husEffektWh-nettoEffektWh;
	
	IF solEffektWh>0 AND solEffektWh < husEffektWh THEN
		sparadEffekt:=husEffektWh/1000;
	ELSIF solEffektWh>0 AND solEffektWh < husEffektWh THEN
		sparadEffekt:=solEffektWh/1000;
	ELSIF solEffektWh<= 0 THEN
		sparadEffekt:=0;
	END_IF
	
	
				IF timDataMomentan.leagstaSolEffekt> solEffektWh/1000 THEN
					timDataMomentan.leagstaSolEffekt:= solEffektWh/1000;
				ELSIF timDataMomentan.hoegstaSolEffekt< solEffektWh/1000 THEN
					timDataMomentan.hoegstaSolEffekt:= solEffektWh/1000;
				END_IF

	timDataMomentan.timPris:= GVL.timData[timIndex].timPris;

	timDataMomentan.sparatSolceller:= timDataMomentan.sparatSolceller + sparadEffekt/144000*(timDataMomentan.timPris+GVL.ElOeverfoeringsAvgiftEonKWh+GVL.EnergiskattKWh+GVL.MomsKWh+GVL.PaaslagMinusRabattKWh);
END_IF

/////////////////////////////////////////////
//24 timmar - Elpriser 

// init client parameters at startup
IF NOT fbHttpClientElpriset.bConfigured THEN 
	fbHttpClientElpriset.stTLS.sVersion:='tlsv1.3';

	
END_IF
IF fbHttpClientElpriset.bConfigured THEN 
	
	IF timme= 0 THEN
		bGet24h:= TRUE;
	ELSE 
		bGet24h:= FALSE;
	END_IF
	
	fbHttpGetElpriset(bSend:=bGet24h, fbClient:=fbHttpClientElpriset, stringDatumTid:=stringDatumTid, timIndex:=timIndex);
END_IF 

fbHttpClientElpriset.Execute();

/////////////////////////////////////////////
//SMHI

// init client parameters at startup
IF NOT fbHttpClientSMHI.bConfigured THEN 
	fbHttpClientSMHI.nHostPort:= 80;
	
	
END_IF
IF fbHttpClientSMHI.bConfigured THEN 
	fbHttpGetSMHI(bSend:=bGetSMHI, fbClient:=fbHttpClientSMHI);
END_IF 

fbHttpClientSMHI.Execute();



//Räkna fram nuvarande tid och datum
		fbLocalTime(bEnable := TRUE);
		systemtidDT := SYSTEMTIME_TO_DT(fbLocalTime.systemTime);
	  	stringDatumTid:= DT_TO_STRING(systemtidDT);
		datumTimmeString:= MID(stringDatumTid, 17, 1);
		datumTimmeString:= concat(datumTimmeString,'00');
		datumTimmeDT:= STRING_TO_DT(datumTimmeString);

	//timme
	stringTimme:=MID(stringDatumTid, 2, 15);
	timme:= STRING_TO_INT(stringTimme);


	  


// Logga data en gång i timmen

IF timme <> timmeloggad THEN
	timmeloggad:=timme;
	timIndex:=timIndex+1;
 

//Data som skall in i struct
	timDataMomentan.DatumTid:=datumTimmeDT;

	LoggaTimData();
END_IF



]]></ST>
    </Implementation>
    <Method Name="HaemtaOchManipuleraTider" Id="{c5c0a27f-4ae9-4949-8126-d40f2dbc816a}">
      <Declaration><![CDATA[METHOD HaemtaOchManipuleraTider : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[

//Detta FB andvänds inte just nu

fbGetsytstemtime(timeLoDW=> filetime.dwLowDateTime, timeHiDW=> filetime.dwHighDateTime);
systemtid:= FILETIME_TO_DT(filetime);
stringTid:= DT_TO_STRING(systemtid);

//timme
stringTimme:=MID(stringTid, 2, 15);
timme:= STRING_TO_INT(stringTimme);

//Data som skall in i struct
timDataMomentan.DatumTid:=systemtid;

]]></ST>
      </Implementation>
    </Method>
    <Method Name="LoggaTimData" Id="{6d1a6346-5045-4466-888c-511f03431295}">
      <Declaration><![CDATA[METHOD LoggaTimData : BOOL
VAR_INPUT
END_VAR

VAR

END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[

	
	GVL.timData[timIndex].DatumTid:=timDataMomentan.DatumTid;
	
	//GVL.timData[timIndex].timPris:= timDataMomentan.timPris;   Kommer från FB:t som hämtar Elpriser
	
	GVL.timData[timIndex].nettoEnergi:=timDataMomentan.nettoEnergi;   //Energi in eller ut till nätet.  //klar
	timDataMomentan.nettoEnergi:=0;
	
	GVL.timData[timIndex].saaldEnergi:=timDataMomentan.saaldEnergi;    //klar
	timDataMomentan.saaldEnergi:=0;
	
	GVL.timData[timIndex].KoeptEnergi:=timDataMomentan.KoeptEnergi;   //klar
	timDataMomentan.KoeptEnergi:=0;
	
	GVL.timData[timIndex].toppNettoEffekt:=timDataMomentan.toppNettoEffekt;    //klar
	timDataMomentan.toppNettoEffekt:=0;
	
	GVL.timData[timIndex].laegstaNettoEffekt:=timDataMomentan.laegstaNettoEffekt;    //klar
	timDataMomentan.laegstaNettoEffekt:=0;
	
	
	GVL.timData[timIndex].leagstaSolEffekt:=timDataMomentan.leagstaSolEffekt;    //klar
	timDataMomentan.leagstaSolEffekt:=0;
	
	GVL.timData[timIndex].hoegstaSolEffekt:=timDataMomentan.hoegstaSolEffekt;     //klar
	timDataMomentan.hoegstaSolEffekt:=0;
	
	GVL.timData[timIndex].leagstaHusEffekt:=timDataMomentan.leagstaHusEffekt;    //klar
	timDataMomentan.leagstaHusEffekt:=0;
	
	GVL.timData[timIndex].hoegstaHusEffekt:=timDataMomentan.hoegstaHusEffekt;     //klar
	timDataMomentan.hoegstaHusEffekt:=0;
	
	GVL.timData[timIndex].avbetalningSolceller:=timDataMomentan.avbetalningSolceller;  //Skall inte nollställas

	
	GVL.timData[timIndex].sparatSolceller:=timDataMomentan.sparatSolceller;  //Skall inte nollställas

	
	GVL.timData[timIndex].saaltSolceller:=timDataMomentan.saaltSolceller;  //Skall inte nollställas
	
	GVL.timData[timIndex].HusetEnergi:= timDataMomentan.HusetEnergi;  //accumulerad 1 timme
	timDataMomentan.HusetEnergi:=0;
	

	







]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>