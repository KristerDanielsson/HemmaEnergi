<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_HTTP_Get_Huset" Id="{cad9803b-e9d9-46c8-a244-6997ab5ba14f}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_HTTP_Get_Huset
VAR_INPUT
	bSend				: BOOL;
	timDataMomentan:REFERENCE TO ST_timData;
	husEffektW:REFERENCE TO REAL;
END_VAR
VAR_IN_OUT
	fbClient			: FB_IotHttpClient;
END_VAR
VAR_OUTPUT
	bBusy				: BOOL;
	bError				: BOOL;
END_VAR
VAR
	fbRequest			: FB_IotHttpRequest;
	fbJson				: FB_JsonDomParser;
	
		fbJsonDataType	: FB_JsonReadWriteDataType;
		felkod			: HRESULT;			
	pContent: PVOID;
	nState				: UDINT;
	RisingEdge			: R_TRIG;
	
	bGetContentResult	: BOOL;
	sContent			: STRING(1100);
	
	bGetJsonResult		: BOOL;
	jsonDoc				: SJsonValue;
	jsonVal				: SJsonValue;
	sResultValue		: STRING;
	
	nReqCount			: UDINT;	
	nResCount			: UDINT;
	nValidResCount		: UDINT;
	nErrCount			: UDINT;
	Vaerde: LINT;
	
	Effektlaegsta: REAL :=100000.0 ;
	Effekthoegsta: REAL;
	stHusetsDataMomentan: ARRAY[0..2] OF HusetsElfoerbrukning;

	Funkar: BOOL;
	nisse: INT;

	i: INT;
	nStateMAx: UDINT;
	
	
	nState1: UDINT;
	nState2: UDINT;
	nState3: UDINT;

END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[RisingEdge(CLK:= bSend );

IF nStateMAx < nState THEN
	nStateMAx := nState;
END_IF

CASE nState OF
	

0:	
	IF RisingEdge.Q THEN 
		IF fbRequest.SendRequest(sUri:='/emeter/0', fbClient:=fbClient, eRequestType:=ETcIotHttpRequestType.HTTP_Get, 0, 0, 0) THEN				
		
		nState:= 1;
			nReqCount:= nReqCount+1;
			bBusy:= TRUE;
			bError:= FALSE;
		END_IF					
	END_IF
1:

	IF NOT fbRequest.bBusy THEN
		bError:= TRUE;
		IF NOT fbRequest.bError THEN	
			////////
			GetContent();
		
		END_IF
			nisse:=nisse+1;
		nState:= 2;                              //Ändra deta
		bBusy:= FALSE;
		IF bError THEN
			nErrCount:= nErrCount+1;
		END_IF
	END_IF  

	

	
2:	
	//IF RisingEdge.Q THEN 
	IF NOT fbRequest.bBusy THEN
		IF fbRequest.SendRequest(sUri:='/emeter/1', fbClient:=fbClient, eRequestType:=ETcIotHttpRequestType.HTTP_Get, 0, 0, 0) THEN				
		
		nState:= 3;
			nReqCount:= nReqCount+1;
			bBusy:= TRUE;
			bError:= FALSE;
		END_IF		
	END_IF			
	//END_IF
3:


IF NOT fbRequest.bBusy THEN
		bError:= TRUE;
		IF NOT fbRequest.bError THEN	
			////////
			GetContent();
		
		END_IF
			nisse:=nisse+1;
		nState:= 4;                              
		bBusy:= FALSE;
		IF bError THEN
			nErrCount:= nErrCount+1;
		END_IF
	END_IF  

	
	
	4:	
		//IF RisingEdge.Q THEN 
	IF NOT fbRequest.bBusy THEN
		IF fbRequest.SendRequest(sUri:='/emeter/2', fbClient:=fbClient, eRequestType:=ETcIotHttpRequestType.HTTP_Get, 0, 0, 0) THEN				
		
		nState:= 5;
			nReqCount:= nReqCount+1;
			bBusy:= TRUE;
			bError:= FALSE;
		END_IF		
	END_IF			
	//END_IF
5:

	
IF NOT fbRequest.bBusy THEN
		bError:= TRUE;
		IF NOT fbRequest.bError THEN	
			////////
			GetContent();
		
		END_IF
			nisse:=nisse+1;
		nState:= 6;                              
		bBusy:= FALSE;
		IF bError THEN
			nErrCount:= nErrCount+1;
		END_IF
	END_IF  

6:   //Räkna ut pengar
	//HusetsEffekt+timDataMomentan.Koept
//timDataMomentan.nettoEnergi

nState:= 0;

	
END_CASE

]]></ST>
    </Implementation>
    <Method Name="GetContent" Id="{43590962-6c1b-4056-b640-90fa684a712b}">
      <Declaration><![CDATA[METHOD GetContent : BOOL
VAR_INPUT
END_VAR

VAR

	n: INT;

	
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[//Hämta data från mätarens HTTP REST API och lägg i string
			bGetContentResult:= fbRequest.GetContent(pContent:= ADR(sContent), nContentSize:= SIZEOF(sContent), bSetNullTermination:= TRUE);
						
			IF fbRequest.nStatusCode >= 200 AND fbRequest.nStatusCode < 300 THEN
				bGetJsonResult:= FALSE;
			
			//Kopiera hela den importerade JSON-formaterade datasträngen och lägg i en motsvarande TwinCAT-struktur
			IF fbJsonDataType.SetSymbolFromJson(sContent, 'HusetsElfoerbrukning', SIZEOF(stHusetsDataMomentan[(nState-1)/2]), ADR(stHusetsDataMomentan[(nState-1)/2]), hrErrorCode=> felkod) THEN
						bError:= FALSE;
			END_IF	
			
				
				//När alla faser är genomgångna								
				IF nState = 5 THEN
				
				husEffektW :=0;	
				FOR n :=0 TO 2 DO
						timDataMomentan.HusetEnergi:= timDataMomentan.HusetEnergi+ (stHusetsDataMomentan[n].power/144000);		//Accumulerad Energi, nollställs varje timme
						husEffektW := husEffektW+ stHusetsDataMomentan[n].power;					//tillfällig effekt
	
						
					END_FOR
						//skriv in i Struct
					
				
					IF timDataMomentan.leagstaHusEffekt> husEffektW THEN 	
					timDataMomentan.leagstaHusEffekt:=husEffektW;
					END_IF
				
					IF timDataMomentan.hoegstaHusEffekt< husEffektW  THEN 	
					timDataMomentan.hoegstaHusEffekt:= husEffektW;
					END_IF
					
					
				END_IF
			
		
				nResCount:= nResCount+1;			
			END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>