<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_HTTP_Get_Huset_1" Id="{f931205d-e5d3-4b29-a1a5-38cc3dc551c5}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_HTTP_Get_Huset_1
VAR_INPUT
	bSend				: BOOL;
	timDataMomentan:REFERENCE TO ST_timData;
END_VAR
VAR_IN_OUT
	fbClient			: FB_IotHttpClient;
END_VAR
VAR_OUTPUT
	bBusy				: BOOL;
	bError				: BOOL;
END_VAR
VAR
	fbRequest			: FB_IotHttpRequest;
	fbJson				: FB_JsonDomParser;
	
		fbJsonDataType	: FB_JsonReadWriteDataType;
		felkod			: HRESULT;			
	pContent: PVOID;
	nState				: UDINT;
	RisingEdge			: R_TRIG;
	
	bGetContentResult	: BOOL;
	sContent			: STRING(1100);
	
	bGetJsonResult		: BOOL;
	jsonDoc				: SJsonValue;
	jsonVal				: SJsonValue;
	sResultValue		: STRING;
	
	nReqCount			: UDINT;	
	nResCount			: UDINT;
	nValidResCount		: UDINT;
	nErrCount			: UDINT;
	Vaerde: LINT;
	
	Effektlaegsta: REAL :=100000.0 ;
	Effekthoegsta: REAL;
	stHusetsDataMomentan: ARRAY[0..2] OF HusetsElfoerbrukning;

	Funkar: BOOL;
	nisse: INT;

	i: INT;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[RisingEdge(CLK:= bSend );

CASE nState OF
0:	
	IF RisingEdge.Q THEN 
		IF Funkar:= fbRequest.SendRequest(sUri:='/emeter/0', fbClient:=fbClient, eRequestType:=ETcIotHttpRequestType.HTTP_Get, 0, 0, 0) THEN				
		
		nState:= 1;
			nReqCount:= nReqCount+1;
			bBusy:= TRUE;
			bError:= FALSE;
		END_IF					
	END_IF
1:

	IF NOT fbRequest.bBusy THEN
		bError:= TRUE;
		IF NOT fbRequest.bError THEN	
			////////
			//GetContent();
			
			//Hämta data från mätarens HTTP REST API och lägg i string
			bGetContentResult:= fbRequest.GetContent(pContent:= ADR(sContent), nContentSize:= SIZEOF(sContent), bSetNullTermination:= TRUE);
						
			IF fbRequest.nStatusCode >= 200 AND fbRequest.nStatusCode < 300 THEN
				bGetJsonResult:= FALSE;
			
			//Kopiera hela den importerade JSON-formaterade datasträngen och lägg i en motsvarande TwinCAT-struktur
			IF fbJsonDataType.SetSymbolFromJson(sContent, 'HusetsElfoerbrukning', SIZEOF(stHusetsDataMomentan[(nState-1)/2]), ADR(stHusetsDataMomentan[(nState-1)/2]), hrErrorCode=> felkod) THEN
						bError:= FALSE;
					END_IF	
			
		
			
				//skriv in i Struct
				timDataMomentan.HusetEnergi:= timDataMomentan.nettoEnergi+ (stHusetsDataMomentan[(nState-1)/2].power/144);
				
				//När alla faser är genomgångna								
				IF nState = 5 THEN
					IF timDataMomentan.leagstaHusEffekt> stHusetsDataMomentan[0].power + stHusetsDataMomentan[1].power + stHusetsDataMomentan[2].power THEN 	
					timDataMomentan.leagstaHusEffekt:= stHusetsDataMomentan[0].power + stHusetsDataMomentan[1].power + stHusetsDataMomentan[2].power;
					END_IF
				
					IF timDataMomentan.hoegstaHusEffekt< stHusetsDataMomentan[0].power + stHusetsDataMomentan[1].power + stHusetsDataMomentan[2].power  THEN 	
					timDataMomentan.hoegstaHusEffekt:= stHusetsDataMomentan[0].power + stHusetsDataMomentan[1].power + stHusetsDataMomentan[2].power ;
					END_IF
				END_IF
				
				nResCount:= nResCount+1;			
			END_IF
			
		END_IF
			nisse:=nisse+1;
		nState:= 0;                              //Ändra deta
		bBusy:= FALSE;
		IF bError THEN
			nErrCount:= nErrCount+1;
		END_IF
	END_IF  

	
(*	
	
2:	
	IF RisingEdge.Q THEN 
		IF Funkar:= fbRequest.SendRequest(sUri:='emeter/1', fbClient:=fbClient, eRequestType:=ETcIotHttpRequestType.HTTP_Get, 0, 0, 0) THEN				
		
		nState:= 3;
			nReqCount:= nReqCount+1;
			bBusy:= TRUE;
			bError:= FALSE;
		END_IF					
	END_IF
3:


	IF NOT fbRequest.bBusy THEN
		bError:= TRUE;
		IF NOT fbRequest.bError THEN	
			GetContent();

		END_IF
			nisse:=nisse+1;
		nState:= 4;
		bBusy:= FALSE;
		IF bError THEN
			nErrCount:= nErrCount+1;
		END_IF
	END_IF  
	
	4:	
	IF RisingEdge.Q THEN 
		IF Funkar:= fbRequest.SendRequest(sUri:='emeter/2', fbClient:=fbClient, eRequestType:=ETcIotHttpRequestType.HTTP_Get, 0, 0, 0) THEN				
		
		nState:= 5;
			nReqCount:= nReqCount+1;
			bBusy:= TRUE;
			bError:= FALSE;
		END_IF					
	END_IF
5:



	IF NOT fbRequest.bBusy THEN
		bError:= TRUE;
		IF NOT fbRequest.bError THEN	
			GetContent();

		END_IF
			nisse:=nisse+1;
		nState:= 0;
		bBusy:= FALSE;
		IF bError THEN
			nErrCount:= nErrCount+1;
		END_IF
	END_IF  

	*)
	
END_CASE

]]></ST>
    </Implementation>
    <Method Name="GetContent" Id="{b6e7b9de-eb29-4abd-9631-3f906f433423}">
      <Declaration><![CDATA[METHOD GetContent : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//Hämta data från mätarens HTTP REST API och lägg i string
			bGetContentResult:= fbRequest.GetContent(pContent:= ADR(sContent), nContentSize:= SIZEOF(sContent), bSetNullTermination:= TRUE);
						
			IF fbRequest.nStatusCode >= 200 AND fbRequest.nStatusCode < 300 THEN
				bGetJsonResult:= FALSE;
			
			//Kopiera hela den importerade JSON-formaterade datasträngen och lägg i en motsvarande TwinCAT-struktur
			IF fbJsonDataType.SetSymbolFromJson(sContent, 'HusetsElfoerbrukning', SIZEOF(stHusetsDataMomentan[(nState-1)/2]), ADR(stHusetsDataMomentan[(nState-1)/2]), hrErrorCode=> felkod) THEN
						bError:= FALSE;
					END_IF	
			
		
			
				//skriv in i Struct
				timDataMomentan.HusetEnergi:= timDataMomentan.nettoEnergi+ (stHusetsDataMomentan[(nState-1)/2].power/144);
				
				//När alla faser är genomgångna								
				IF nState = 5 THEN
					IF timDataMomentan.leagstaHusEffekt> stHusetsDataMomentan[0].power + stHusetsDataMomentan[1].power + stHusetsDataMomentan[2].power THEN 	
					timDataMomentan.leagstaHusEffekt:= stHusetsDataMomentan[0].power + stHusetsDataMomentan[1].power + stHusetsDataMomentan[2].power;
					END_IF
				
					IF timDataMomentan.hoegstaHusEffekt< stHusetsDataMomentan[0].power + stHusetsDataMomentan[1].power + stHusetsDataMomentan[2].power  THEN 	
					timDataMomentan.hoegstaHusEffekt:= stHusetsDataMomentan[0].power + stHusetsDataMomentan[1].power + stHusetsDataMomentan[2].power ;
					END_IF
				END_IF
				
				
	

			
				nResCount:= nResCount+1;			
			END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>